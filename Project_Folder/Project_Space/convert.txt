pyuic5 -x Delete.ui -o Delete.py
pyuic5 -x Login.ui -o Login.py
pyuic5 -x Register.ui -o Register.py
pyuic5 -x Advance.ui -o Advance.py
pyuic5 -x Basic.ui -o Basic.py
pyuic5 -x Search.ui -o Search.py
pyuic5 -x Show_ID.ui -o Show_ID.py
pyuic5 -x Info_Editor.ui -o info_Editor.py
pyuic5 -x Concentrate_Advance.ui -o Concentrate_Advance.py
pyuic5 -x Search_Login_history.ui -o Search_Login_history.py

Password-1:
c4ca4238a0b923820dcc509a6f75849b

Default Password = 

Password: encoded by md5 format


需求：

將Search 和 History 頁面整合            (V)

Normal user 的 編輯畫面                 (V)

大量刪除                                (V)

搜尋功能要能夠顯示多個符合條件的資料         (V)

Tab pages for Assigning the board 

    > 增加
    > 搜尋
    > 刪除配對到的使用者

    plate status: can be assigned
    assign and expire time



SELECT * FROM User_Information WHERE ID LIKE '%?%'





# Modding for Search/Edit
        # adjust column size
        header = self.Display_table.horizontalHeader()   
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)    
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.ResizeToContents)    
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.ResizeToContents)    
        header.setSectionResizeMode(5, QtWidgets.QHeaderView.ResizeToContents)    

        # hide the error message
        self.Edit_error_message.setHidden(True)


        # connect button to function
        self.Show_all_button.clicked.connect(lambda: self.show_all_user())
        self.ID_search_button.clicked.connect(lambda: self.show_user_by_id(self.ID_input.text()))
        self.Name_search_button.clicked.connect(lambda: self.show_user_by_name(self.Name_input.text()))
        self.Gender_button.clicked.connect(lambda: self.show_user_by_gender())
        self.Permission_button.clicked.connect(lambda: self.show_user_by_permission())
        self.Save_change_button.clicked.connect(lambda: self.get_data_from_table())
        self.Delete_User_button.clicked.connect(lambda: self.show_delete_confirm())
        self.Add_User_button.clicked.connect(lambda: self.open_Register_window())

# Modding for Login History
        # adjust column size
        header = self.Display_Login_info.horizontalHeader()   
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)    
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.ResizeToContents)    
   
        # connect button to function
        self.Show_all_button_login_history.clicked.connect(lambda: self.show_all_login_history())
        self.ID_search_button_login_history.clicked.connect(lambda: self.show_login_history_by_id(self.ID_input_login_history.text()))
        self.Status_show_button.clicked.connect(lambda: self.show_login_history_by_status())
        self.Fail_type_button.clicked.connect(lambda: self.show_login_history_by_fail_type())
        self.Success_type_button.clicked.connect(lambda: self.show_login_history_by_success_type())

        # let table be read only
        self.Display_Login_info.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
